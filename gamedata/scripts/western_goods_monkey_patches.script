---==================================================================================================================---
---                                                                                                                  ---
---    Original Author(s) : NLTP_ASHES                                                                               ---
---    Edited : N/A                                                                                                  ---
---    Date : 17/02/2024                                                                                             ---
---    License : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)           ---
---                                                                                                                  ---
---    Script used to monkey-patch some functions of base anomaly, or other addons.                                  ---
---                                                                                                                  ---
---==================================================================================================================---

-- ---------------------------------------------------------------------------------------------------------------------
-- Constants, global variables and imported functions
-- ---------------------------------------------------------------------------------------------------------------------

-- New callbacks
AddScriptCallback("western_goods_on_campfire_use")
AddScriptCallback("western_goods_on_cigarette_use")
AddScriptCallback("western_goods_on_hideout_furniture_light_use")

-- Imported functions
local dbg_printf                = western_goods_utils.dbg_printf

-- Configuration
monkey_patches                         = {
    hideout_furniture_light = {
        name = "hideout_furniture_light",
        patches = {
            { prio=1, script="ui_furniture_light",  func="toggle_light",             cond = function() return ui_furniture_light and hf_obj_manager end }
        }
    },
    item_before_use = {
        name = "item_before_use",
        patches = {
            { prio=1, script="itms_manager",        func="actor_on_item_before_use", cond = function() return true end },
            { prio=2, script="enhanced_animations", func="originalAOIBU",            cond = function() return enhanced_animations end }
        }
    },
    campfire_on_interact = {
        name = "campfire_on_interact",
        patches = {
            { prio=1, script="western_goods_core",  func="use_campfire",             cond = function() return true end }
        }
    }
}

-- ---------------------------------------------------------------------------------------------------------------------
-- Functions
-- ---------------------------------------------------------------------------------------------------------------------

function apply_monkey_patches()
    this.make_monkey_patch(monkey_patches.hideout_furniture_light, function(obj_id)
        local is_on_before = hf_obj_manager.get_data(obj_id).is_on
        this.hideout_furniture_light(obj_id)
        local is_on_after = hf_obj_manager.get_data(obj_id).is_on
        if not is_on_before and not is_on_after then
            SendScriptCallback("western_goods_on_hideout_furniture_light_use", obj_id)
        end
    end)
    this.make_monkey_patch(monkey_patches.item_before_use, function(obj, flags)
        this.item_before_use(obj, flags)
        SendScriptCallback("western_goods_on_cigarette_use", obj, flags)
    end)
    this.make_monkey_patch(monkey_patches.campfire_on_interact, function()
        this.campfire_on_interact()
        SendScriptCallback("western_goods_on_campfire_use")
    end)
end

function find_best_monkey_patch(monkey_patch_group)
    -- Filter out invalid monkey-patches (keep only ones that can be executed)
    local valid_patches = {}
    for _,patch in pairs(monkey_patch_group.patches) do
        if patch.cond() then
            table.insert(valid_patches, patch)
        end
    end

    -- Find highest priority-monkey patch
    local monkey_patch = nil
    for idx,patch in pairs(valid_patches) do
        monkey_patch = monkey_patch or patch
        if monkey_patch.prio <= patch.prio then
            monkey_patch = patch
        end
    end

    if not monkey_patch then
        dbg_printf("[WG] Fire Source Binder | No applicable monkey-patch for %s", monkey_patch_group.name)
        return
    end

    return monkey_patch
end

function make_monkey_patch(monkey_patch_group, func)
    local monkey_patch = this.find_best_monkey_patch(monkey_patch_group)
    if not monkey_patch then
        return
    end

    -- Variabilized to fix a highlight bug in my IDE
    local script_name = monkey_patch.script
    local function_name = monkey_patch.func

    dbg_printf("[WG] Fire Source Binder | Monkey-patching %s function in %s.script", function_name, script_name)
    this[monkey_patch_group.name] = _G[script_name][function_name]
    _G[script_name][function_name] = func
end

-- ---------------------------------------------------------------------------------------------------------------------
-- Callbacks registration
-- ---------------------------------------------------------------------------------------------------------------------

--- Function used to register callbacks.
--- @return nil
function on_game_start()
    RegisterScriptCallback("on_game_load", apply_monkey_patches)
end