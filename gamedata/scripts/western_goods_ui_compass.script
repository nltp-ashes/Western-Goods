---==================================================================================================================---
---                                                                                                                  ---
---    Original Author(s) : NLTP_ASHES                                                                               ---
---    Edited : N/A                                                                                                  ---
---    Date : 24/02/2024                                                                                             ---
---    License : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)           ---
---                                                                                                                  ---
---    Script used to handle the 3D UI for the compass device.                                                       ---
---                                                                                                                  ---
---==================================================================================================================---

-- ---------------------------------------------------------------------------------------------------------------------
-- Constants, global variables and imported functions
-- ---------------------------------------------------------------------------------------------------------------------

-- Constants
DEGREES_PER_RADIAN                = 57.296

-- Imported functions
dbg_printf                        = western_goods_utils.dbg_printf

-- Singleton
GUI                               = nil -- instance, don't touch

-- ---------------------------------------------------------------------------------------------------------------------
-- General Functions
-- ---------------------------------------------------------------------------------------------------------------------

--- Function used to get the UI singleton for the UICompass class.
--- @return UICompass
function get_ui()
    if (not GUI) then
        GUI = UICompass()
    end

    return GUI
end

-- ---------------------------------------------------------------------------------------------------------------------
-- UI Class
-- ---------------------------------------------------------------------------------------------------------------------

class "UICompass" (CUIScriptWnd)

function UICompass:__init() super()
    dbg_printf("[WG] UI Compass | Constructing GUI...")

    self:Show(true)
    self:Enable(true)

    -- Build UI
    self.m_xml = CScriptXmlInit()
    self.m_xml:ParseFile("ui_western_goods_compass.xml")
    self.m_xml:InitWindow("compass", 0, self)

    self.m_heading = self.m_xml:InitStatic("compass:heading", self)
    self.m_heading:InitTextureEx("cp_heading", "hud\\p3d")

    self.m_cursor = self.m_xml:InitStatic("compass:cursor", self)
    self.m_cursor:InitTextureEx("cp_cursor", "hud\\p3d")

    -- Build variables
    self.m_update_timer = 0
    self.m_update_freq = 16
end

function UICompass:__finalize()
    GUI = nil
end

function UICompass:Update()

    CUIScriptWnd.Update(self)

    -- Throttle update
    if not self:ShouldUpdate() then
        return
    end

    -- Get heading
    local heading_rad = self:GetHeadingRadians()
    local heading_deg = self:GetHeadingDegrees()

    -- Update heading
    self.m_heading:SetHeading(heading_rad)
end

function UICompass:ShouldUpdate()
    local tg = time_global()
    if (tg < self.m_update_timer) then
        return false
    else
        self.m_update_timer = tg + self.m_update_freq
        return true
    end
end

function UICompass:GetHeadingRadians()
    local position = vector():set(0, 0, 0)
    local direction = vector():set(0, 0, 0):sub(db.actor:direction())

    local dx = position.x - direction.x
    local dz = position.z - direction.z

    return math.atan2(dx, dz)
end

function UICompass:GetHeadingDegrees()
    local heading_rad = self:GetHeadingRadians()
    local heading_deg = heading_rad * DEGREES_PER_RADIAN
    return western_goods_utils.number_wrap(heading_deg, 0, 360)
end