---==================================================================================================================---
---                                                                                                                  ---
---    Original Author(s) : NLTP_ASHES                                                                               ---
---    Edited : N/A                                                                                                  ---
---    Date : 01/01/2025                                                                                             ---
---    License : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)           ---
---                                                                                                                  ---
---    This script is responsible for all the scripted needs of the keycards module.                                 ---
---                                                                                                                  ---
---    western_goods_module_keycards.spawn_door("door_metal_145_230_01")                                             ---
---    western_goods_module_keycards.spawn_door("door_old_wood_120x240_01")                                          ---
---    western_goods_module_keycards.spawn_door("door_metal_150x240_01")                                             ---
---    western_goods_module_keycards.spawn_door("door_metal_155x235_01")                                             ---
---    western_goods_module_keycards.spawn_door("door_wood_130x245_01")                                              ---
---                                                                                                                  ---
---==================================================================================================================---

-- ---------------------------------------------------------------------------------------------------------------------
-- Constants, global variables and imported functions
-- ---------------------------------------------------------------------------------------------------------------------

-- Imported functions
local dbg_printf             = western_goods_utils.dbg_printf

-- Constants
local ini_doors_existing     = ini_file([[plugins\western_goods\keycards\doors_existing.ltx]])
local ini_doors_new          = ini_file([[plugins\western_goods\keycards\doors_new.ltx]])

-- ---------------------------------------------------------------------------------------------------------------------
-- General functions
-- ---------------------------------------------------------------------------------------------------------------------

-- ---------------------------------------------------------------------------------------------------------------------
-- General functions
-- ---------------------------------------------------------------------------------------------------------------------

function actor_on_first_update()
    ini_doors_new:section_for_each(function(door_name)
        local section = ini_doors_new:r_string_ex(door_name, "section")
        local info_portion = ini_doors_new:r_string_ex(door_name, "spawned_info")
        local named_location = ini_doors_new:r_string_ex(door_name, "named_location")

        if not western_goods_utils.has_info(info_portion) then
            spawn_door(door_name, section, named_location, info_portion)
        end
    end)
end

xr_logic_get_customdata_or_ini_file = xr_logic.get_customdata_or_ini_file
function xr_logic.get_customdata_or_ini_file(npc, filename)
    local override_logic = this.get_customdata_override(npc, level.name())
    if override_logic ~= nil then
        dbg_printf("[WG] Keycards | Overrode existing door %s logic with %s at %s", npc:name(), override_logic)
        return ini_file(override_logic), override_logic
    end
    return xr_logic_get_customdata_or_ini_file(npc, filename)
end

-- ---------------------------------------------------------------------------------------------------------------------
-- Callbacks registration
-- ---------------------------------------------------------------------------------------------------------------------

--- Function used to register callbacks.
--- @return nil
function on_game_start()
    RegisterScriptCallback("actor_on_first_update", actor_on_first_update)
end

-- ---------------------------------------------------------------------------------------------------------------------
-- Utility functions
-- ---------------------------------------------------------------------------------------------------------------------

function spawn_door(door_name, section, named_location, info_portion)
    local location = western_goods_utils.get_named_location(named_location)
    local se_obj = alife_create(section, location.position, location.lvid, location.gvid)
    if se_obj then
        se_obj.angle = location.orientation
        western_goods_utils.give_info(info_portion)
        dbg_printf("[WG] Keycards | Spawned door %s at %s", door_name, named_location)
    else
        printf("[WG] ERROR | Keycards | Failed to spawn door %s at %s", door_name, named_location)
    end
end

function get_customdata_override(npc, npc_level)
    local override_logic = nil
    ini_doors_existing:section_for_each(function(door_name)
        local name = ini_doors_existing:r_string_ex(door_name, "name")
        local level_name = ini_doors_existing:r_string_ex(door_name, "level")
        local logic = ini_doors_existing:r_string_ex(door_name, "logic")

        if npc:name() == name and npc_level == level_name then
            override_logic = logic
        end
    end)
    return override_logic
end